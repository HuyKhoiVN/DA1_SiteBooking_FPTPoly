@using BaseSolution.BlazorServer.Data.DataTransferObjects.Amenity.Request;
@using BaseSolution.BlazorServer.Respository.Interfaces;
<MudPopover Style="background-color: rgba(255, 255, 255, 0.8); width: 100vw; height: 100vh; position: fixed; display: flex; justify-content: center; align-items: center; " Open="true" Elevation="0">
    <div style="display: flex; justify-content: center; align-items: center; width: 100%; height: 100%;" >
        <MudPaper Class="px-5 pt-5 pb-4" Width="50%" Elevation="3">
            <MudForm Model="@amenityCreateRequest" @bind-IsValid="@success" @ref="@_form">
                <h5>Thêm tòa nhà khách sạn</h5>
                <MudPaper Width="100%" Elevation="0">
                    <MudGrid>
                        <MudItem xs="12">
                            <MudTextField @bind-Value="amenityCreateRequest.Name" Label="Tên tiện ích" For="() => amenityCreateRequest.Name" Class="mb-2"></MudTextField>
                        </MudItem>
                    </MudGrid>
                    <MudGrid>
                        <MudItem xs="12">
                            <MudTextField @bind-Value="amenityCreateRequest.Description" Label="Mô tả" For="() => amenityCreateRequest.Description" Class="mb-2"></MudTextField>
                        </MudItem>
                    </MudGrid>
                </MudPaper>
                <div class="float-end">
                    <MudButton OnClick="@OnClickCancel">Hủy</MudButton>
                    <MudButton @onclick="Reset">Làm mới</MudButton>
                    <MudButton @onclick="CreateNewBuilding" Disabled="@(!success)">Lưu</MudButton>
                </div>
            </MudForm>
        </MudPaper>
    </div>
</MudPopover>
@code {
    [Parameter]
    public EventCallback onCloseAdd { get; set; }
    [Inject]
    public IAmenityRespo amenityRespo { get; set; }
    [Inject]
    public IDialogService _dialogService { get; set; }
    [Inject]
    public ISnackbar _snackbar { get; set; }
    private CreateAmenityRequest amenityCreateRequest = new();
    private bool success;
    MudForm _form;
    private async Task OnValidSubmid()
    {

    }
    private async Task OnClickCancel()
    {
        await onCloseAdd.InvokeAsync();
    }
    private async Task CreateNewBuilding()
    {
        await _form.Validate();
        if (!_form.IsValid) return;
        var confirm = await _dialogService.ShowMessageBox
        (
            "Thông báo",
            "Xác nhận thêm tòa nhà?",
            "Xác nhận",
            cancelText: "Hủy"
        );
        if (confirm == true)
        {
            var result = await amenityRespo.CreateNewAmenity(amenityCreateRequest);
            if (result == true)
            {
                await OnClickCancel();
                _snackbar.Add("Thêm thành công", Severity.Success);
            }
            else
            {
                _snackbar.Add
                (
                    "Thêm thất bại",
                     Severity.Error
                );
            }
            await Reset();
        }
    }
    private async Task Reset()
    {
        amenityCreateRequest = new CreateAmenityRequest();
    }
}
