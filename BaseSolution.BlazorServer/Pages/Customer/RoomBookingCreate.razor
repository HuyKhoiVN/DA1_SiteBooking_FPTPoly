@using BaseSolution.BlazorServer.Data.DataTransferObjects.Customer;
@using BaseSolution.BlazorServer.Data.DataTransferObjects.Customer.Request;
@using BaseSolution.BlazorServer.Data.DataTransferObjects.RoomBooking.Request;
@using BaseSolution.BlazorServer.Data.DataTransferObjects.RoomBooking;
@using BaseSolution.BlazorServer.Data.DataTransferObjects.RoomDetail;
@using BaseSolution.BlazorServer.Data.DataTransferObjects.RoomDetail.Request;
@using BaseSolution.BlazorServer.Data.DataTransferObjects.Service.Request;
@using BaseSolution.BlazorServer.Data.DataTransferObjects.ServiceType;
@using BaseSolution.BlazorServer.Pages.Customer;
@using BaseSolution.BlazorServer.Respository.Interfaces;
<MudDialog>
    <DialogContent>
        @if (_isLoadingList)
        {
            <LoadingIndicator></LoadingIndicator>
        }
        else
        {
            <MudForm Model="@_roomBookingCreateRequest" @ref="_form">
                <MudPaper Elevation="0">
                    <MudTextField T="string" Label="Mã định danh" @bind-Value="createRequest.IdentificationNumber" Required="true"/>
                    <MudTextField T="string" Label="Nhập code" Required="true" @bind-Value="createRequest.ApprovedCode"></MudTextField>
                    <MudTextField @bind-Value="@_roomBookingCreateRequest.BookingType" For="@(() => _roomBookingCreateRequest.BookingType)" Label="Loại đặt phòng"></MudTextField>
                    <MudTextField @bind-Value="@_roomBookingCreateRequest.CodeBooking" For="@(() => _roomBookingCreateRequest.CodeBooking)" Label="Mã đặt phòng"></MudTextField>
                </MudPaper>
            </MudForm>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="OnClickCancel">Hủy</MudButton>
        <MudButton OnClick="Reset">Khôi phục</MudButton>
        <MudButton OnClick="CreateNewRoomBooking">Đặt phòng</MudButton>
    </DialogActions>
</MudDialog>

@code {
    #region Khai báo
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }
    [Inject]
    public IRoomDetailRespo roomDetailRespo { get; set; }
    [Inject]
    public IRoomBookingRespo roomBookingRespo { get; set; }
    [Inject]
    public ICustomerRepo cumtomerRespo { get; set; }
    [Inject]
    public IDialogService _dialogService { get; set; }
    [Inject]
    public ISnackbar _snackbar { get; set; }

    private ViewRoomDetailWithPaginationRequest _roomDetailRequest = new();

    private ViewCustomerWithPaginationRequest customer = new();

    private PaginationResponse<RoomDetailDTO> _roomDetailVM;
    private PaginationResponse<CustomerDTO> _CustomerVM;

    List<RoomDetailDTO> lstRoomDetails = new();
    List<CustomerDTO> lstCustomer = new();
    private RoombookingCreateRequest _roomBookingCreateRequest = new();
    public CustomerCreateRequest createRequest = new();

    private string roomDetailId;
    private string customerId;

    private bool _isLoadingList = true;
    MudForm _form;
    #endregion
    #region Code xử lý
    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }
    private async Task LoadData()
    {
        _roomDetailVM = await roomDetailRespo.GetAllRoomDetailsByStatus(_roomDetailRequest);
        lstRoomDetails = _roomDetailVM.Data!.ToList();

        _CustomerVM = await cumtomerRespo.GetCustomer(customer);
        lstCustomer = _CustomerVM.Data!.ToList();

        _isLoadingList = false;
    }
    private void OnClickCancel()
    {
        MudDialog.Cancel();
    }
    private void Reset()
    {
        _roomBookingCreateRequest = new();
    }
    private async Task CreateNewRoomBooking()
    {
        await _form.Validate();
        if (!_form.IsValid) return;
        var confirm = await _dialogService.ShowMessageBox
        (
            "Thông báo",
            "Xác nhận thêm phòng?",
            "Xác nhận",
            cancelText: "Hủy"
        );
        if (confirm == true)
        {
            _roomBookingCreateRequest.RoomDetailId = Guid.Parse(roomDetailId);
            _roomBookingCreateRequest.CustomerId = Guid.Parse(customerId);
            var result = await roomBookingRespo.CreateNewRoomBooking(_roomBookingCreateRequest);
            if (result == true)
            {
                MudDialog.Close(DialogResult.Ok(true));
                _snackbar.Add("Thêm thành công", Severity.Success);
            }
            else
            {
                _snackbar.Add
                (
                    "Thêm thất bại",
                     Severity.Error
                );
            }
            Reset();
        }
    }
    #endregion
}
