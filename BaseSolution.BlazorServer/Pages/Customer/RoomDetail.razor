@using BaseSolution.BlazorServer.Data.DataTransferObjects.Building
@using BaseSolution.BlazorServer.Data.DataTransferObjects.Building.Request
@using BaseSolution.BlazorServer.Data.DataTransferObjects.Floor
@using BaseSolution.BlazorServer.Data.DataTransferObjects.Floor.Request
@using BaseSolution.BlazorServer.Data.DataTransferObjects.RoomDetail
@using BaseSolution.BlazorServer.Data.DataTransferObjects.RoomDetail.Request
@using BaseSolution.BlazorServer.Data.DataTransferObjects.RoomType
@using BaseSolution.BlazorServer.Data.DataTransferObjects.RoomType.Request
@using BaseSolution.BlazorServer.Respository.Interfaces

<MudDialog>
    <DialogContent>
        @if (isLoadingList)
        {
            <LoadingIndicator />
        }
        else
        {
            <MudPaper Elevation="0" Class="ma-1">
                <MudForm Model="roomDetailUpdateRequest" @ref="_form" ReadOnly="ReadOnly">
                    <MudGrid>
                        <MudItem xs="4">
                            <MudImage Src="@imageURL" Fluid="true" Class="rounded-lg w-100" Style="border: 1px grey solid;"></MudImage> 
                        </MudItem>
                        <MudItem xs="8">
                            <MudGrid>
                                <MudItem xs="6">
                                    <MudSelect T="Guid" @bind-Value="idBuilding" Label="Tòa nhà" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
                                        @if (idBuilding == Guid.Empty)
                                        {
                                            <MudSelectItem Value="Guid.Empty">Không có tòa nào</MudSelectItem>
                                        }
                                        else
                                        {
                                            @foreach (var item in _lstBuilding)
                                            {
                                                <MudSelectItem Value="item.Id">@item.Name</MudSelectItem>
                                            }
                                        }

                                    </MudSelect>
                                </MudItem>
                                <MudItem xs="6">
                                    <MudSelect T="Guid" @bind-Value="idFloor" Label="Tầng" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
                                        @if (!_lstFloor.Any())
                                        {
                                            <MudSelectItem Value="Guid.Empty">Không có tầng nào</MudSelectItem>
                                        }
                                        else
                                        {
                                            @foreach (var item in _lstFloor)
                                            {
                                                <MudSelectItem Value="item.Id">@item.Name</MudSelectItem>
                                            }
                                        }

                                    </MudSelect>
                                </MudItem>
                            </MudGrid>
                            <MudGrid>
                                <MudItem xs="6">
                                    <MudSelect T="Guid" @bind-Value="roomDetailUpdateRequest.RoomTypeId" Label="Loại phòng" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
                                        @if (_lstRoomType != null)
                                        {

                                            @foreach (var item in _lstRoomType)
                                            {
                                                <MudSelectItem Value="item.Id">@item.Name</MudSelectItem>
                                            }
                                        }
                                    </MudSelect>
                                </MudItem>
                                <MudItem xs="6">
                                    <MudTextField @bind-Value="roomDetailUpdateRequest.Name" For="@(() => roomDetailUpdateRequest.Name)" Label="Tên phòng"></MudTextField>
                                </MudItem>
                            </MudGrid>
                        </MudItem>
                    </MudGrid>

                    <MudGrid>
                        <MudItem xs="6">
                            <MudNumericField @bind-Value="roomDetailUpdateRequest.RoomSize" For="@(() => roomDetailUpdateRequest.RoomSize)" Label="Diện tích phòng" Min="1" T="double"></MudNumericField>
                        </MudItem>
                        <MudItem xs="6">
                            <MudNumericField @bind-Value="roomDetailUpdateRequest.MaxPeopleStay" For="@(() => roomDetailUpdateRequest.MaxPeopleStay)" Label="Số người tối đa" T="int" Min="1"></MudNumericField>
                        </MudItem>

                    </MudGrid>
                    <MudGrid>
                        <MudItem xs="6">
                            <MudNumericField @bind-Value="roomDetailUpdateRequest.Price" For="@(() => roomDetailUpdateRequest.Price)" Label="Giá phòng" T="decimal" Min="100000"></MudNumericField>
                        </MudItem>
                        <MudItem xs="6">
                            <MudSelect T="RoomStatus" AnchorOrigin="Origin.BottomCenter" @bind-Value="roomDetailUpdateRequest.Status" For="@(() => roomDetailUpdateRequest.Status)">
                                <MudSelectItem Value="RoomStatus.Vacant">Phòng trống</MudSelectItem>
                                <MudSelectItem Value="RoomStatus.OutOfOrder">Không sử dụng</MudSelectItem>
                                <MudSelectItem Value="RoomStatus.Cleaned">Đã dọn phòng</MudSelectItem>
                                <MudSelectItem Value="RoomStatus.Dirty">Phòng bẩn</MudSelectItem>
                                <MudSelectItem Value="RoomStatus.Inspected">Đã kiểm tra</MudSelectItem>
                                <MudSelectItem Value="RoomStatus.Reserved">Đã được đặt</MudSelectItem>
                                <MudSelectItem Value="RoomStatus.Occupied">Đã được thuê</MudSelectItem>
                            </MudSelect>
                        </MudItem>
                    </MudGrid>
                    <MudGrid>
                        <MudItem xs="12">
                            <MudTextField @bind-Value="roomDetailUpdateRequest.Description" T="string" For="@(() => roomDetailUpdateRequest.Description)" Label="Mô tả phòng" Lines="3"></MudTextField>
                        </MudItem>
                    </MudGrid>
                </MudForm>
            </MudPaper>
        }
    </DialogContent>
    <DialogActions>
        @if (isLoadingList)
        {
            <MudButton OnClick="OnClickCancel">Thoát</MudButton>
        }
        else
        {
            <MudButton OnClick="OnClickCancel">Thoát</MudButton>
        }
    </DialogActions>
</MudDialog>
@code {
    #region Khai báo
    [Parameter]
    public Guid idRoomDetail { get; set; }
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }
    [Inject]
    public IBuildingRespo buildingRespo { get; set; }
    [Inject]
    public IRoomDetailRespo roomDetailRespo { get; set; }
    [Inject]
    public IRoomTypeRespo roomTypeRespo { get; set; }
    [Inject]
    public IDialogService dialogService { get; set; }
    [Inject]
    public ISnackbar snackbar { get; set; }
    [Inject]
    public IFloorRespo floorRespo { get; set; }
    MudForm _form;
    ImageHandle imageHandle = new();
    private RoomDetailUpdateRequest roomDetailUpdateRequest = new();
    private RoomDetailDTO? roomDetailInfo;
    private ViewBuildingWithPaginationRequest buildingRequest = new()
        {
            PageSize = int.MaxValue - 1
        };
    private ViewFloorWithPaginationRequest floorRequest = new()
        {
            PageSize = int.MaxValue - 1
        };
    private ViewRoomTypeWithPaginationRequest roomTypeRequest = new()
        {
            PageSize = int.MaxValue - 1
        };
    private PaginationResponse<BuildingDTO> _buildingVM = new();
    private PaginationResponse<FloorDTO> _floorVM;
    private PaginationResponse<RoomTypeDTO> _roomTypeVM;
    private List<BuildingDTO> _lstBuilding;
    private List<FloorDTO> _lstFloor;
    private List<RoomTypeDTO> _lstRoomType;
    private Guid idBuilding = Guid.Empty;
    private Guid idBuildingCurrent = Guid.Empty;
    private Guid idFloor = Guid.Empty;
    private bool isLoadingList = true;
    private string imageURL = string.Empty;
    bool ReadOnly = true;
    #endregion
    #region Code xử lý
    private async Task LoadData()
    {
        floorRequest.BuildingId = idBuilding;
        _floorVM = await floorRespo.GetAllFloors(floorRequest);
        _lstFloor = _floorVM.Data!.ToList();
        if (!_lstFloor.Any())
        {
            idFloor = Guid.Empty;
        }
        else
        {
            idFloor = _lstFloor[0].Id;
        }
        roomDetailUpdateRequest.Id = roomDetailInfo!.Id;
        roomDetailUpdateRequest.FloorId = roomDetailInfo.FloorId;
        roomDetailUpdateRequest.RoomTypeId = roomDetailInfo.RoomTypeId;
        roomDetailUpdateRequest.Name = roomDetailInfo.Name;
        roomDetailUpdateRequest.Price = roomDetailInfo.Price;
        roomDetailUpdateRequest.MaxPeopleStay = roomDetailInfo.MaxPeopleStay;
        roomDetailUpdateRequest.Description = roomDetailInfo.Description;
        roomDetailUpdateRequest.Status = roomDetailInfo.Status;
        roomDetailUpdateRequest.RoomSize = roomDetailInfo.RoomSize;
        roomDetailUpdateRequest.Images = roomDetailInfo.Images;
        imageURL = roomDetailUpdateRequest.Images[0];
        isLoadingList = false;
    }
  
    protected override async Task OnInitializedAsync()
    {
        roomDetailInfo = await roomDetailRespo.GetRoomDetailById(idRoomDetail);
        idBuilding = roomDetailInfo.BuildingId;
        _buildingVM = await buildingRespo.GetAllBuilding(buildingRequest);
        _lstBuilding = _buildingVM.Data!.ToList();
        _roomTypeVM = await roomTypeRespo.GetAllRoomTypes(roomTypeRequest);
        _lstRoomType = _roomTypeVM.Data!.ToList();
        idFloor = roomDetailInfo.FloorId;
        await LoadData();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (idBuilding != idBuildingCurrent)
        {
            isLoadingList = true;
            idBuildingCurrent = idBuilding;
            await LoadData();
            StateHasChanged();
        }
    }
  
    private void OnClickCancel()
    {
        MudDialog.Cancel();
    }
    
   
    #endregion
}
